name: Crossbow
on:
  push:
    branches:
      - "r-nightly-testing"

jobs:
  r-packages:
    name: ${{ matrix.platform }} ${{ matrix.r_version.r }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - devops-managed
        r_version:
          #- { rtools: 40, r: "4.1" }
          - { rtools: 42, r: "4.2" }
    steps:
      - name: Install Homebrew
        shell: arch -arch arm64 bash {0}
        run: |
          arch -arch arm64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval $(/opt/homebrew/bin/brew shellenv)' >> $GITHUB_PATH
      - name: Install R
        shell: arch -arch arm64 bash {0}
        run: |
          curl -O https://cloud.r-project.org/bin/macosx/big-sur-arm64/base/R-${{ matrix.r}}.0-arm64.pkg
          sudo installer -pkg R-4.2.0-arm64.pkg -target /
          echo "$(brew --prefix node@16)/bin" >> $GITHUB_PATH
          echo "$(brew --prefix ruby)/bin" >> $GITHUB_PATH
          echo "PKG_CONFIG_PATH=$(brew --prefix ruby)/lib/pkgconfig" >> $GITHUB_ENV
      - run: echo $PATH
      # - name: Build Binary
      #   shell: Rscript {0}
      #   run: |
      #     print(.Platform)
      #     on_windows <- tolower(Sys.info()[["sysname"]]) == "windows"

      #     # Install dependencies by installing (yesterday's) binary, then removing it
      #     install.packages(c("arrow", "cpp11"),
      #       # TODO replace with https://nightly.wujciak.de/r
      #       repos = c("https://arrow-r-nightly.s3.amazonaws.com", "https://cloud.r-project.org")
      #     )
      #     remove.packages("arrow")

      #     # Build
      #     Sys.setenv(MAKEFLAGS = paste0("-j", parallel::detectCores()))
      #     INSTALL_opts <- "--build"
      #     if (!on_windows) {
      #       # Windows doesn't support the --strip arg
      #       INSTALL_opts <- c(INSTALL_opts, "--strip")
      #     }
      #     install.packages(
      #       "arrow",
      #       type = "source",
      #       repos = "https://nightly.wujciak.de/r",
      #       INSTALL_opts = INSTALL_opts
      #     )

      #     # Test
      #     library(arrow)
      #     read_parquet(system.file("v0.7.1.parquet", package = "arrow"))
      # # - name: Upload package
      # #   shell: arch -arch arm64 bash {0} 
      # #   env:
      # #     USER: ${{ secrets.CROSSBOW_NIGHTLIES_USER }}
      # #     PW: ${{ secrets.CROSSBOW_NIGHTLIES_TOKEN }}
          
      # #   run: |
      # #     VERSION=$(grep ^Version arrow/r/DESCRIPTION | sed s/Version:\ //)
      # #     REPO_PATH=r$(arch -arch arm64 Rscript -e "cat(contrib.url('', type = 'binary'))")
      # #     echo $REPO_PATH
      # #     #curl -s --fail --show-error -u $USER:$PW -T arrow_$VERSION.* https://nightly.wujciak.de:8080/$REPO_PATH/
      # # - name: Upload binary artifact (temp)
      # #   uses: actions/upload-artifact@v3
      # #   with:
      # #     name: r-${{ matrix.config.os}}-pkg
      # #     path: arrow_*.zip 
